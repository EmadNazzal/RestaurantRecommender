"""Command to generate fake users for the User model."""

from django.core.management.base import BaseCommand
from faker import Faker

from user_management.models import Profile, User  # type: ignore


class Command(BaseCommand):
    """A Django management command to generate fake users for the User model."""

    help = "Generate fake users for the User model"

    def handle(self, *args, **kwargs):  # noqa: ARG002
        """Handle the command execution."""
        fake = Faker()

        # Remove all existing users
        User.objects.all().delete()

        # Extended list of unique first names and surnames
        characters = [
            "Ahto Snowness",
            "Whatever Targaryen",
            "Tyrionness Lannister",
            "Arya Stark",
            "Cersei Lannister",
            "Jaime Lannister",
            "Sansa Stark",
            "Bran Stark",
            "Euron Greyjoy",
            "Theon Greyjoy",
            "Sandor Clegane",
            "Petyr Baelish",
            "Varys NoSurname",
            "Brienne of Tarth",
            "Samwell Tarly",
            "Jorah Mormont",
            "Davos Seaworth",
            "Melisandre Marvolous",
            "Stannis Baratheon",
            "Margaery Tyrell",
            "Olenna Tyrell",
            "Loras Tyrell",
            "Renly Baratheon",
            "Gendry Cangrenous",
            "Ygritte Ybnel",
            "Tormund Giantsbane",
            "Mance Rayder",
            "Khal Drogo",
            "Missandei Hurrey",
            "Grey Worm",
            "Daario Naharis",
            "Catelyn Stark",
            "Ned Stark",
            "Robb Stark",
            "Yara Greyjoy",
            "Ellaria Sand",
            "Oberyn Martell",
            "Arianne Martell",
            "Obara Sand",
            "Nymeria Sand",
            "Tyene Sand",
            "Sarella Sand",
            "Alayne Stone",
            "Lady Olenna",
            "Lancel Lannister",
            "Kevan Lannister",
            "Benjen Stark",
            "Melisandrek Catnip",
            "Maester Pycelle",
            "Rhaegar Targaryen",
            "Viserys Targaryen",
            "Harry Potter",
            "Hermione Granger",
            "Ron Weasley",
            "Albus Dumbledore",
            "Severus Snape",
            "Sirius Black",
            "Remus Lupin",
            "Draco Malfoy",
            "Ginny Weasley",
            "Neville Longbottom",
            "Luna Lovegood",
            "Rubeus Hagrid",
            "Minerva McGonagall",
            "Dolores Umbridge",
            "Peter Pettigrew",
            "Gellert Grindelwald",
            "Bellatrix Lestrange",
            "Horace Slughorn",
            "Sybill Trelawney",
            "Arthur Weasley",
            "Molly Weasley",
            "Cedric Diggory",
            "Viktor Krum",
            "Fleur Delacour",
            "Nymphadora Tonks",
            "Kingsley Shacklebolt",
            "Alastor Moody",
            "Xenophilius Lovegood",
            "Gregory Goyle",
            "Vincent Crabbe",
            "Pansy Parkinson",
            "Millicent Bulstrode",
            "Ernie Macmillan",
            "Justin Finch-Fletchley",
            "Colin Creevey",
            "Dennis Creevey",
            "Parvati Patil",
            "Padma Patil",
            "Lavender Brown",
            "Romilda Vane",
            "Eloise Midgen",
            "Katie Bell",
            "Angelina Johnson",
            "Alicia Spinnet",
            "Lee Jordan",
            "Cho Chang",
            "Marietta Edgecombe",
            "Blaise Zabini",
            "Gilderoy Lockhart",
            "Quirinus Quirrell",
            "Phineas Nigellus",
            "Helga Hufflepuff",
            "Rowena Ravenclaw",
            "Salazar Slytherin",
            "Godric Gryffindor",
            "Catnip Swines",
            "Offred Offercock",
            "Moira Flaberghasted",
            "Serena Joy",
            "Aunt Lydia",
            "Emily Emaculate",
            "Luke Lovable",
            "Janine Jovial",
            "Ofglen Ovethetop",
            "Ofwarren Underthetop",
            "Rita Lovelace",
            "Commander Waterford",
            "Commander Judd",
            "Commander Kyle",
            "Nick NoSurname",
            "Patrick NoSurname",
            "Phil Philicious",
            "Rebecca Randomness",
            "Doris Dusseldorf",
            "Linda Laughable",
            "Natalie Nickleback",
            "Carol Careful",
            "Naomi Neitherofus",
            "Sylvia Sad",
            "Ruth Ruthendrof",
            "Janet Jackson",
            "Hilda Nibble",
            "Margaret Atwood",
            "Susan Sontag",
            "Laura Lalalaa",
            "Katniss Everdeen",
            "Peeta Mellark",
            "Gale Hawthorne",
            "Prim Everdeen",
            "Effie Trinket",
            "Haymitch Abernathy",
            "President Snow",
            "Finnick Odair",
            "Johanna Mason",
            "Beetee Bee",
            "Wiress Wired",
            "Cinna Cunnilingus",
            "Madge Undersee",
            "Glimmer Glimmerman",
            "Clove Clover",
            "Thresh Hold",
            "Darius Diehard",
            "Annie Cresta",
            "Cashmere Cashmose",
            "Gloss Glossines",
            "Pollux Bollocks",
            "Plutarch Heavensbee",
            "Seneca Crane",
            "Cato Catoness",
            "Foxface Fox",
            "Tigris Tigrinett",
            "Mags Fabuloys",
            "Enobaria Baria",
            "Brutus Brutuness",
            "Chaff Chafflul",
            "Blight Terrible",
            "Cecelia Notsonice",
            "Woof Woofendroff",
            "Seeder Sederius",
            "Cressida Cressendof",
            "Boggs Boggsy",
            "Lyme Lace",
            "Castor Stomachache",
            "Messalla Messy",
            "Homes Homeboy",
            "Jackson Jill",
            "Mitchell Michellin",
            "Leeg One",
            "Leeger Two",
            "Mitch Machoss",
            "Greasy Sae",
            "Rory Hawthorne",
            "Posy Hawthorne",
            "Hazelle Hawthorne",
            "Mister Everdeen",
            "Aegon Targaryen",
            "Aemon Targaryen",
            "Aerys Targaryen",
            "Jaehaerys Targaryen",
            "Visenya Targaryen",
            "Rhaenyra Targaryen",
            "Aegon Blackfyre",
            "Bittersteel Steeliness",
            "Daemon Blackfyre",
            "Haegon Blackfyre",
            "Maekar Targaryen",
            "Rhaelle Targaryen",
            "Ormund Baratheon",
            "Lyarra Stark",
            "Walder Frey",
            "Brynden Tully",
            "Edmure Tully",
            "Hoster Tully",
            "Lysa Tully",
            "Eddard Stark",
            "Rickard Stark",
            "Benjen Stark",
            "Aegon Frey",
            "Roslin Frey",
            "Petyr Frey",
            "Olyvar Frey",
            "Hosteen Frey",
            "Merrett Frey",
            "Aenys Frey",
            "Perra Frey",
            "Tytos Lannister",
            "Tygett Lannister",
            "Gerion Lannister",
            "Dorna Swyft",
            "Jeyne Marbrand",
            "Martyn Lannister",
            "Willem Lannister",
        ]

        number_of_users = 200

        if len(characters) < number_of_users:
            self.stdout.write(self.style.ERROR("Not enough unique names to create the required number of users."))
            return

        used_emails = set()

        for i in range(number_of_users):
            character_name = characters[i]
            first_name, surname = (
                character_name.split(maxsplit=1) if " " in character_name else (character_name, "NoSurname")
            )

            while True:
                email = fake.email()
                if email not in used_emails:
                    used_emails.add(email)
                    break

            password = fake.password()

            user = User.objects.create_user(email=email, first_name=first_name, surname=surname, password=password)  # type: ignore

            Profile.objects.create(user=user, first_name=first_name, surname=surname, slug=fake.slug())

            print(f"Created user: {user.email} with name: {first_name} {surname}")

        self.stdout.write(self.style.SUCCESS(f"Successfully created {number_of_users} fake users"))
