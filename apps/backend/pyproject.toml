# --- Project Configuration --------------------------------------------------
[project]
name = "nibbler"
version = "0.0.1"
description = "Nibbler is a Manhattan based personalised restaurant recommendation service."

authors = [
  { name = "Emma Nolan" },
  { name = "Riin Kaljurand" },
  { name = "Han Zheng" },
  { name = "Carlo Finnegan" },
  { name = "Emad Nazzal" },
]

classifiers = [
  "Framework :: Django",
  "Programming Language :: Python :: 3",
  "Topic :: Internet :: WWW/HTTP :: REST/HTTP",
]

requires-python = ">=3.11"
dependencies = ["ruff", "django == 5.0.6", "djangorestframework == 3.15.1"]

[project.urls]
homepage = "https://github.com/chugalugzzz/SummerProject"

# --- Ruff Configuration -----------------------------------------------------

[tool.ruff]
line-length = 120
extend-include = ["*.ipynb"]
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "ANN",   # flake8-annotations
  "ARG",   # flake-8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "BLE",   # flake8-blind-except
  "C4",    # flake8-comprehensions
  "C90",   # mccabe
  "D",     # pydocstyle
  "E",     # pycodestyle
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "F",     # Pyflakes
  "FA",    # flake8-future-annotations
  "FBT",   # flake8-boolean-trap
  "FLY",   # flynt
  "FURB",  # refurb
  "I",     # isort
  "INP",   # flake8-no-pep420
  "N",     # pep8-naming
  "NPY",   # NumPy-specific
  "PD",    # pandas-vet
  "PERF",  # perflint
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # pylint
  "PTH",   # flake8-use-pathlib
  "Q",     # flake8-quotes 
  "RET",   # flake8-return
  "RSE",   # flake8-raise
  "RUF",   # Ruff-specific 
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "SLF",   # flake8-self
  "T10",   # flake8-debugger
  "TCH",   # flake8-type-checking
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # pycodestyle
  "YTT",   # flake8-2020
  # "G",   # flake8-logging-format
  # "LOG", # flake8-logging
]
ignore = [
  # --- Conflicting Rules ---
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "E501",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
  "E402",
  # --- Unwanted Rules ---
  "D212",   # Conflicts with D213.
  "D203",   # Conflicts with D211
  "ANN401", # Disables using `any-type` for type annotations.
  # --- Off and On ---
  # Place rules here that you may want to comment and uncomment throughout the
  # project development process.
  "PGH003",
  "RUF012",  # ClassVar false positive rule
  "PLR6301", # Requiers curd methods to be defined as class methods
  # --- Docstring Rules ---
  # "D100",
  # "D101",
  # "D102",
  # "D103",
  # "D104",
  # "D105",
  # "D106",
]

exclude = ["**/migrations/*.py"]

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

# --- Pytest Configuration ------------------------------------------------

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "backend_django.settings"

# --- Mypy Configuration ------------------------------------------------

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_decorators = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
explicit_package_bases = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_equality = true
strict_optional = true
show_error_codes = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
exclude = "venv"

# Django-stubs specific settings
# Additional libraries for compatibilty with django, See https://pypi.org/project/django-stubs/

[tool.django-stubs]
django_settings_module = "backend_django.settings"
strict_settings = false

plugins = ["mypy_django_plugin.main"]

# --- SonarLint Configuration ------------------------------------------------

[tool.sonarlint]
enable = true
python = true
java = false
javascript = false

# --- Error Lens Configuration ------------------------------------------------
[tool.errorLens]
statusBarMessageEnabled = true
errorBackground = "#ff3333"
warningBackground = "#ffcc00"
gutterIcons = true
fontSizeDelta = 0

# --- Pytest Configuration ---------------------------------------------------
# TODO: Add pytest configuration.
